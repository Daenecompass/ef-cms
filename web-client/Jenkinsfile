pipeline {

  agent any

  // environment {
  // }

  options { buildDiscarder(logRotator(daysToKeepStr: '3', artifactDaysToKeepStr: '3')) }

  stages {
    stage('Build') {
      steps {
        script {
          def runner = docker.build 'test', '-f react-client/Dockerfile.test .'
          runner.inside('-u 0:0') { // really wish I didn't have to use root
            dir('react-client') {
              sh 'npm i'
              sh 'npm run lint'
              sh 'npm run test'
              // sh 'npx cypress install' // TODO: finish implementing me
              // sh 'npm run cypress' // // TODO: finish implementing me
            }
          }
        }
      }
      post {
        success {
          dir('react-client') {
            publishHTML allowMissing: false, alwaysLinkToLastBuild: false, keepAll: true, reportDir: 'artifacts/coverage', reportFiles: 'index.html', reportName: 'Code Coverage Report', reportTitles: ''
          }
        }
      }
    }
    stage('Deploy dev') {
      // when {
      //   branch 'develop'
      // }
      steps {
        deployTo('dev')
      }
    }
    stage('Deploy prod') {
      when {
        branch 'master'
      }
      steps {
        deployTo('prod')
      }
    }
  }
  // post {
  //   always {
  //     deleteDir()
  //   }
  // }
}

def deployTo(env) {
  def runner = docker.build 'test', '-f react-client/Dockerfile.test .'
  runner.inside('-u 0:0') { // really wish I didn't have to use root
    dir('react-client') {
      sh 'npm i'
      sh 'npm run dist'
      s3Upload(
        bucket: "ui-${env}.ustc-case-mgmt.flexion.us",
        file: 'dist',
        path: "",
        cacheControl: 'no-cache'
      )
    }
  }
}